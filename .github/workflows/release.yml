name: Auto Bump Version and Create Release

on:
  push:
    branches:
      - main

jobs:
  bump_version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false  # We need to use the GITHUB_TOKEN manually

    - name: Set up GitHub authentication
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Get the latest tag from Git
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "0.0.0")
        echo "Latest tag: $latest_tag"
        echo "::set-output name=latest_tag::$latest_tag"

    - name: Bump version
      id: bump_version
      run: |
        # Extract major, minor, and patch from the latest tag
        IFS='.' read -r -a version_parts <<< "${{ steps.get_latest_tag.outputs.latest_tag }}"
        major="${version_parts[0]}"
        minor="${version_parts[1]}"
        patch="${version_parts[2]}"

        # Increment the patch version
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch"
        echo "New version: $new_version"
        echo "::set-output name=new_version::$new_version"

    - name: Create and push a new tag
      run: |
        new_version=${{ steps.bump_version.outputs.new_version }}
        git tag -a "v$new_version" -m "Release version $new_version"
        git push origin "v$new_version"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update PKGBUILD with new version
      run: |
        new_version=${{ steps.bump_version.outputs.new_version }}
        sed -i "s/pkgver=.*/pkgver=${new_version}/" PKGBUILD
        sed -i "s|source=.*|source=(\"jlock-encryption-$new_version.tar.gz::https://github.com/${{ github.repository }}/archive/refs/tags/v${new_version}.tar.gz\")|" PKGBUILD

    - name: Download source tarball
      run: |
        new_version=${{ steps.bump_version.outputs.new_version }}
        wget https://github.com/${{ github.repository }}/archive/refs/tags/v${new_version}.tar.gz -O source.tar.gz

    - name: Calculate sha256sum
      run: |
        sha256sum=$(sha256sum source.tar.gz | cut -d ' ' -f 1)
        sed -i "s/sha256sums=.*/sha256sums=('$sha256sum')/" PKGBUILD

    - name: Commit updated PKGBUILD
      run: |
        git add PKGBUILD
        git commit -m "Update PKGBUILD for version ${{ steps.bump_version.outputs.new_version }}"
        git push origin main

    - name: Create and push a new tag
      run: |
        new_version=${{ steps.bump_version.outputs.new_version }}
        git tag -a "v$new_version" -m "Release version $new_version"
        git push origin "v$new_version"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ steps.bump_version.outputs.new_version }}"
        release_name: "Release v${{ steps.bump_version.outputs.new_version }}"
        draft: false
        prerelease: false
        body: "Release generated from commit ${{ github.sha }}"